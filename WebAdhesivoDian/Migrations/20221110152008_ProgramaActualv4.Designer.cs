// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAdhesivoDian.Models;

#nullable disable

namespace WebAdhesivoDian.Migrations
{
    [DbContext(typeof(WebAdhesivoDianContext))]
    [Migration("20221110152008_ProgramaActualv4")]
    partial class ProgramaActualv4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebAdhesivoDian.Models.Cajero", b =>
                {
                    b.Property<int>("IdCajero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCajero"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("IdOficina")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OficinaIdOficina")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ultimaNumeracion")
                        .HasColumnType("int");

                    b.HasKey("IdCajero");

                    b.HasIndex("OficinaIdOficina");

                    b.ToTable("Cajero");
                });

            modelBuilder.Entity("WebAdhesivoDian.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConsecutivoCadena")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("FormateoCodigoFijo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Formato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RutaBaseSalida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UltimoPedido")
                        .HasColumnType("int");

                    b.HasKey("IdCliente");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("WebAdhesivoDian.Models.DetalleEncabezado", b =>
                {
                    b.Property<int>("IdDetalleEncabezado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleEncabezado"), 1L, 1);

                    b.Property<int?>("CajeroIdCajero")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CantidadFinal")
                        .HasColumnType("int");

                    b.Property<int>("CantidadInicial")
                        .HasColumnType("int");

                    b.Property<int>("ConsectivoFinalCadena")
                        .HasColumnType("int");

                    b.Property<int>("ConsectivoinicialCadena")
                        .HasColumnType("int");

                    b.Property<int?>("EncabezadoIdEncabezado")
                        .HasColumnType("int");

                    b.Property<int>("IdCajero")
                        .HasColumnType("int");

                    b.Property<int>("IdEncabezado")
                        .HasColumnType("int");

                    b.HasKey("IdDetalleEncabezado");

                    b.HasIndex("CajeroIdCajero");

                    b.HasIndex("EncabezadoIdEncabezado");

                    b.ToTable("DetalleEncabezado");
                });

            modelBuilder.Entity("WebAdhesivoDian.Models.Encabezado", b =>
                {
                    b.Property<int>("IdEncabezado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEncabezado"), 1L, 1);

                    b.Property<int?>("ClienteIdCliente")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<string>("NombreArchivoCargado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePedido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEncabezado");

                    b.HasIndex("ClienteIdCliente");

                    b.ToTable("Encabezado");
                });

            modelBuilder.Entity("WebAdhesivoDian.Models.Modulos", b =>
                {
                    b.Property<int>("Id_Modulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Modulos");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Modulo"), 1L, 1);

                    b.Property<string>("Accion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ACCION_MODULO");

                    b.Property<int>("Codigo_modulo")
                        .HasColumnType("int")
                        .HasColumnName("CODIGO");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("ESTADO");

                    b.Property<string>("Nombre_Modulo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOMBRE_MODULO");

                    b.HasKey("Id_Modulo");

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("WebAdhesivoDian.Models.Oficina", b =>
                {
                    b.Property<int>("IdOficina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOficina"), 1L, 1);

                    b.Property<int?>("ClienteIdCliente")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoCiudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoMunucio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destinatario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reponsable1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reponsable2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reponsable3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDireccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idCliente")
                        .HasColumnType("int");

                    b.HasKey("IdOficina");

                    b.HasIndex("ClienteIdCliente");

                    b.ToTable("Oficina");
                });

            modelBuilder.Entity("WebAdhesivoDian.Models.PermisoRolModulo", b =>
                {
                    b.Property<int>("Id_permiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Permiso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_permiso"), 1L, 1);

                    b.Property<int>("Codigo_Permiso")
                        .HasColumnType("int")
                        .HasColumnName("Codigo_permiso");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<int>("Id_Modulo")
                        .HasColumnType("int")
                        .HasColumnName("Id_Modulo");

                    b.Property<int>("Id_Rol")
                        .HasColumnType("int")
                        .HasColumnName("Id_Rol");

                    b.HasKey("Id_permiso");

                    b.HasIndex("Id_Modulo");

                    b.HasIndex("Id_Rol");

                    b.ToTable("PermisosRolModulo");
                });

            modelBuilder.Entity("WebAdhesivoDian.Models.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("ESTADO");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOMBRE");

                    b.HasKey("Id");

                    b.ToTable("ROLES");
                });

            modelBuilder.Entity("WebAdhesivoDian.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("APELLIDOS");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EMAIL");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("ESTADO");

                    b.Property<int>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("ID_ROL");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOMBRE");

                    b.Property<byte[]>("Password")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PASS");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SALT");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdRol");

                    b.ToTable("USUARIOS");
                });

            modelBuilder.Entity("WebAdhesivoDian.Models.Cajero", b =>
                {
                    b.HasOne("WebAdhesivoDian.Models.Oficina", "Oficina")
                        .WithMany("Cajeros")
                        .HasForeignKey("OficinaIdOficina");

                    b.Navigation("Oficina");
                });

            modelBuilder.Entity("WebAdhesivoDian.Models.DetalleEncabezado", b =>
                {
                    b.HasOne("WebAdhesivoDian.Models.Cajero", "Cajero")
                        .WithMany()
                        .HasForeignKey("CajeroIdCajero");

                    b.HasOne("WebAdhesivoDian.Models.Encabezado", "Encabezado")
                        .WithMany("DetalleEncabezados")
                        .HasForeignKey("EncabezadoIdEncabezado");

                    b.Navigation("Cajero");

                    b.Navigation("Encabezado");
                });

            modelBuilder.Entity("WebAdhesivoDian.Models.Encabezado", b =>
                {
                    b.HasOne("WebAdhesivoDian.Models.Cliente", "Cliente")
                        .WithMany("Encabezados")
                        .HasForeignKey("ClienteIdCliente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("WebAdhesivoDian.Models.Oficina", b =>
                {
                    b.HasOne("WebAdhesivoDian.Models.Cliente", "Cliente")
                        .WithMany("Oficinas")
                        .HasForeignKey("ClienteIdCliente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("WebAdhesivoDian.Models.PermisoRolModulo", b =>
                {
                    b.HasOne("WebAdhesivoDian.Models.Modulos", "Modulos")
                        .WithMany()
                        .HasForeignKey("Id_Modulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAdhesivoDian.Models.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("Id_Rol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modulos");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("WebAdhesivoDian.Models.Usuario", b =>
                {
                    b.HasOne("WebAdhesivoDian.Models.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("WebAdhesivoDian.Models.Cliente", b =>
                {
                    b.Navigation("Encabezados");

                    b.Navigation("Oficinas");
                });

            modelBuilder.Entity("WebAdhesivoDian.Models.Encabezado", b =>
                {
                    b.Navigation("DetalleEncabezados");
                });

            modelBuilder.Entity("WebAdhesivoDian.Models.Oficina", b =>
                {
                    b.Navigation("Cajeros");
                });
#pragma warning restore 612, 618
        }
    }
}
